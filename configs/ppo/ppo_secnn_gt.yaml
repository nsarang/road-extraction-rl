core:
  experiment_name: mask-rgb-secnn
  experiment_dir: experiments/${core.experiment_name}

data:
  city: toronto
  data_dir: data

env:
  action_scheme:
    name: MaskDiscrete
    args:
      step_size: 10
      brush_width: 5
  reward_scheme:
    name: MaskReward
    args:
      revisit_weight: 0.5
      error_weight: 1
  stopper:
    name: MaxPenaltyLatest
    args:
      max_negative: -2
      window: 3
  base:
    train:
      renderer: null
      use_logger: False
      observation_shape:
        - 512
        - 512
      starting_location: null
      observation_mode: stacked
      experiment_dir: ${core.experiment_dir}
    test:
      auto_render: step
      starting_location: null
      observation_mode: ${env.base.train.observation_mode}
      observation_shape: ${env.base.train.observation_shape}
      experiment_dir: ${env.base.train.experiment_dir}
  wrappers:
    train:
      max_steps: 30
      max_episodes: 2
      preprocess_obs: true
    test:
      max_steps: 30
      max_episodes: 2
      preprocess_obs: true
    

collector:
  num_train_envs: 6
  num_test_envs: 2
  train_seed: 11
  test_seed: 111
  buffer_type: PERB
  buffer_size: 512
  alpha: 0.7
  beta: 0.5
  test_noise: 0

policy:
  device: dp
  backbone:
    name: core.policy.networks.SECNN_1INP
    args:
      feature_vector_size: 256
      obs_channels: 4
    pretrained: null
  optimizer:
    lr: 1e-4
    weight_decay: 1e-3
  ppo:
    discount_factor: 0.9
    vf_coef: 0.4
    ent_coef: 0.01
    eps_clip: 0.2
    max_grad_norm: 1
    gae_lambda: 0.95
    reward_normalization: false
    dual_clip: null
    value_clip: False
    max_batchsize: 8

trainer:
  args:
    max_epoch: 300
    step_per_epoch: 100
    collect_per_step: 2 # n_episodes used by the collector
    repeat_per_collect: 4
    batch_size: 8
    episode_per_test: 4
  experiment_dir: ${core.experiment_dir}
  reward_threshold: 100
